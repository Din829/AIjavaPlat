<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ding.aiplatjava.mapper.ApiTokenMapper">

    <!-- 启用 mapUnderscoreToCamelCase 后，通常不需要显式 ResultMap -->
    <!-- <resultMap id="ApiTokenResultMap" type="com.ding.aiplatjava.entity.ApiToken">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="provider" column="provider"/>
        <result property="tokenValue" column="token_value"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap> -->

    <!-- 根据ID查询 ApiToken -->
    <select id="selectById" resultType="com.ding.aiplatjava.entity.ApiToken">
        SELECT id, user_id, provider, token_value, created_at, updated_at
        FROM api_tokens
        WHERE id = #{id}
    </select>

    <!-- 根据用户ID查询 ApiTokens -->
    <select id="selectByUserId" resultType="com.ding.aiplatjava.entity.ApiToken">
        SELECT id, user_id, provider, token_value, created_at, updated_at
        FROM api_tokens
        WHERE user_id = #{userId}
        ORDER BY created_at DESC
    </select>

    <!-- 插入 ApiToken -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO api_tokens (user_id, provider, token_value, created_at, updated_at)
        VALUES (#{userId}, #{provider}, #{tokenValue}, #{createdAt}, #{updatedAt})
    </insert>

    <!-- 根据 Token ID 和用户 ID 删除 ApiToken -->
    <delete id="deleteByIdAndUserId">
        DELETE FROM api_tokens
        WHERE id = #{id}
          AND user_id = #{userId}
    </delete>

    <!-- 根据用户ID和Provider查询单个ApiToken -->
    <select id="selectByUserIdAndProvider" resultType="com.ding.aiplatjava.entity.ApiToken">
        SELECT
            id, user_id, provider, token_value, created_at, updated_at
        FROM
            api_tokens
        WHERE
            user_id = #{userId}
          AND provider = #{provider}
        LIMIT 1 -- 假设一个用户一个提供商只有一个token，确保只返回一个
    </select>

</mapper> 