spring.application.name=AIplatJava

# DataSource Configuration
spring.datasource.url=jdbc:mysql://localhost:33306/ai_support_platform_db?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
spring.datasource.username=aisp_user
spring.datasource.password=q75946123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Database Initialization
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:db/schema.sql
spring.sql.init.data-locations=classpath:db/data.sql
spring.sql.init.continue-on-error=true

# MyBatis Configuration
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.mapper-locations=classpath:mapper/*.xml

# Spring AI Configuration
spring.ai.openai.api-key=${SPRING_AI_OPENAI_API_KEY}
spring.ai.openai.model=gpt-4.1
spring.ai.openai.base-url=https://api.openai.com
spring.ai.openai.chat.options.temperature=0.7
spring.ai.openai.chat.options.max-tokens=16384

# Logging Configuration
logging.level.com.ding.aiplatjava=DEBUG
logging.level.org.springframework.security=INFO

# Application Security Configuration
# !!警告!!: 生产环境中密钥不应直接写在此处，应使用环境变量或更安全的配置方式。
# 使用 Base64 编码的 32字节 (256位) AES 密钥。
# 请替换为实际生成的密钥。
app.security.encryption-key=AAECAwQFBgcICQoLDA0ODxAREhMUFRYXGBkaGxwdHh8=

# JWT Configuration
# !!警告!!: 生产环境中密钥不应直接写在此处，应使用环境变量或更安全的配置方式。
# 用于 JWT 签名的密钥 (Base64 编码, 建议至少 32 字节 / 256 位)。
# 请替换为实际生成的强密钥。
app.security.jwt.secret-key=VGhpcyBpcyBhIHZlcnkgc2VjdXJlIGFuZCBsb25nIHNlY3JldCBmb3IgdGVzdGluZyBwdXJwb3NlcyE=
# JWT 过期时间 (毫秒)，例如 1 小时 = 3600000
app.security.jwt.expiration-ms=3600000

# OCR Service Configuration
# OCR微服务URL
ocr.service.url=http://localhost:8012
# 文件上传目录，默认为临时目录
ocr.upload.dir=${java.io.tmpdir}/ocr-uploads
# 文件上传大小限制
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Gemini API Configuration
ocr.gemini.api-key=AIzaSyDFLyEYqgaC6plSFF5IjvQEW0FEug6o14o
ocr.gemini.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro-preview-05-06:generateContent
